[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "spark_check"
version = "0.1.0"
description = ""
authors = ["Julie Berlin <julie@deiteo.io>"]
license = "proprietary"
readme = "README.md"

[tool.poetry.dependencies]
# waiting on pytype: https://github.com/google/pytype/issues/1308
python = "~3.13"
pyspark = "~3.5"
dynaconf = "~3.2.6"
pydantic = "==1.10.12"

[tool.poetry.dev-dependencies]
# echo-shared-python-dev-deps = "^1.0.0"
python = ">=3.8,<3.12"
black = "^23.0.0"
ruff = "^0.5.0"
keyring = "^24.2.0"
keyrings-google-artifactregistry-auth = "^1.1.2"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytype = "^2023.11.29"
pre-commit = "^3.5.0"
pytest-mock = "^3.14.0"

[tool.ruff]
src = ["dags", "plugins"]
lint.select = [
    "B",   # flake8-bugbear
    "C90", # mccabe
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
#    "NPY", # numpy-specific rules
#    "PD",  # pandas-vet
    "PL",  # pylint
#    "PT",  # flake8-pytest-style
    "RUF", # ruff specific rules
    "S",   # flake8-bandit
    "TID", # flake8-tidy-imports
]
lint.ignore = [
    "ANN101",  # missing-type-self
    "ANN003",  # missing-type-kwargs
    "D100",    # Missing docstring in public module
    "D203",    # one-blank-line-before-class
    "D211",    # no-blank-line-before-class
    "D212",    # multi-line-summary-first-line
    "E501",    # Line too long
    "D401",    # non-imperative-mood
    "S105",    # hardcoded-password-string
    "S608",    # Possible SQL injection vector through string-based query construction
    "D107",    # undocumented-public-init
    "D102",    # undocumented-public-method
    "PLR0913", # too-many-arguments
    "PLR2004", # Magic value used in comparison
]
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",    # asserts
    "ANN001",  # no argument types
    "ANN003",  # no kwarg types
    "ANN201",  # no return types
    "D100",    # no docstrings in modules
    "D101",    # no docstrings in classes
    "D103",    # no docstrings in functions
    "E501",    # line too long
    "PLR2004", # constant value in tests
]
[tool.pytype]
# must match exactly the .python-version file
python_version = '3.11'

[tool.ruff.pydocstyle]
convention = "google"

[tool.coverage.run]
relative_files = true
branch = true
